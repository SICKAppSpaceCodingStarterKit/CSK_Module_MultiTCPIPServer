<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<manifest>
    <application name="CSK_Module_MultiTCPIPServer">
        <crown name="CSK_Module_MultiTCPIPServer">
            <desc>This is an automatically generated CROWN (description not necessary).</desc>
            <serves/>
        </crown>
        <crown name="CSK_MultiTCPIPServer">
            <trait>released</trait>
            <desc>This CSK module provides an easy access to TCP/IP Server functionality. +
The main externally useful features are following: +
{empty} +
**1. Generic CSK functionality** +
Each instance is handled in a separate thread. Useful instance functions: +
- "addInstance" - to create a new instance +
- "setSelectedInstance" - to select instance you are working on +
{empty} +
**2. Server settings** +
- "setInterface" - to select ethernet interface +
- "setPort" - to select port to listen to +
- "setListenState" - to activate/deactivate server +
- "setACKTimeout" - to set acknowledgement timeout +
- "setMaxConnections" - to set limit of connected clients +
- "setTransmitionTimeout" - to set timeout of data transmition +
- "setTransmitionBuffer" - to set size of the socket send buffer. +
- "setRxBuffer" - to set the size of the internal framing parser buffer for received data +
- "setTxBuffer" - to set the size of the internal framing parser buffer for transmitted data +
- "setRxFraming" - to set the framing type of received data, can be "Custom", "Empty" and "STX-ETX" +
- "setRxStart" - to set start framing of received data as hex value in case framing type is "Custom" +
- "setRxStop" - to set ending framing of received data as hex value in case framing type is "Custom" +
- "setTxFraming" - to set the framing type of transmitted data, can be "Custom", "Empty" and "STX-ETX" +
- "setTxStart" - to set start framing of transmitted data as hex value in case framing type is "Custom" +
- "setTxStop" - to set ending framing of transmitted data as hex value in case framing type is "Custom" +
{empty} +
NOTE! Server must be restarted with "setListenState(false)" - "setListenState(true)" to apply the new settings +
{empty} +
**3. Receive data** +
It is possible to receive  data via dynamically created "CSK_MultiTCPIPServer.OnReceivedDataNUM" events or "readMessages" (see chapter 5). +
{empty} +
**4. Data transmission** +
It is possible to transmit data via dynamically created "CSK_MultiTCPIPServer.sendDataNUM" functions or "writeMessages" (see chapter 6). +
{empty} +
**5. Read messages** +
Read messages can be used to filter for data of specific data sources. It is possible to set an IP filter for each created read message. +
- "createReadMessage" - to create a new read message +
- "setSelectedReadMessage" - to select the read message +
- "setReadMessageName" - to rename the read message +
- "deleteReadMessage" - to delete the read message +
- "setUseReadMessageIPFilter" - to enable/disable the IP filter +
- "setIPAddressToAddToReadMessage" - to add new IP address to the filter +
Incoming data will be provided via event "CSK_MultiTCPIPServer.OnReceivedData[NUM]_[READMESSAGENAME]" ("NUM" and "READMESSAGENAME" will be replaced by instance number and name of read message). +
{empty} +
**6. Write messages** +
Write message is the data that will be sent to clients. It is possible to set an IP filter to send this data only to specific clients. +
Read messages can be used to filter for data of specific data sources. It is possible to set an IP filter for each created read message. +
- "createWriteMessage" - to create a new write message +
- "setSelectedWriteMessage" - to select a write message +
- "setWriteMessageName" - to rename the write message +
- "deleteWriteMessage" - to delete the write message +
- "setUseWriteMessageIPFilter" - to enable/disable the IP filter +
- "setIPAddressToAddToWriteMessage" - to add new IP address to the filter +
A created write message can be used via "CSK_MultiTCPIPServer.OnReceivedData[NUM]_[WRITEMESSAGENAME]" (NUM and WRITEMESSAGENAME will be replaced by instance number and name of write message). +
{empty} +
**7. Events and functions to be used for data forwarding** +
- "CSK_MultiTCPIPServer.OnReceivedData[NUM]" - event to receive any incoming data to [NUM] instance +
- "CSK_MultiTCPIPServer.sendData[NUM]" - function to send data to all clients connected to [NUM] instance +
- "CSK_MultiTCPIPServer.OnReceivedData[NUM]_[MessageName]" - event to receive incoming data of read message with name [MessageName] of instance [NUM] +
- "CSK_MultiTCPIPServer.sendData[NUM]_[MessageName]" - function to send data as write message with name [MessageName] of instance [NUM] +
{empty} +
- "CSK_MultiTCPIPServer.getLatestGenericReceivedData[NUM]" - function to get the latest payload received from any client of instance [NUM] +
- "CSK_MultiTCPIPServer.getLatestGenericSentData[NUM]" - function to get the latest payload sent to any client of instance [NUM] +
- "CSK_MultiTCPIPServer.getLatestReadMessageData[NUM]" - function to get the latest payload received as specific read message of instance [NUM] +
- "CSK_MultiTCPIPServer.getLatestWriteMessageData[NUM]" - function to get the latest payload sent as specific write message of instance [NUM] +</desc>
            <enum name="FramingType" trait="released">
                <desc>Framing type of TCPIP server for Rx or Tx data.</desc>
                <item desc="Start framing is STX, end framing is ETX." name="STX_ETX">STX-ETX</item>
                <item desc="Empty framing." name="Empty">Empty</item>
                <item desc="Custom type where user can set ant start / end symbols." name="Custom">Custom</item>
            </enum>
            <serves>
                <event name="OnNewStatusLoadParameterOnReboot">
                    <desc>Notify status if parameters should be loaded on app/device boot up.</desc>
                    <param desc="Status." multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnPersistentDataModuleAvailable">
                    <desc>Notify status if features of CSK_PersistentData module are available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewInstanceList">
                    <desc>Event to provide list of created instances.</desc>
                    <param desc="List of created instances." multiplicity="1" name="list" type="string"/>
                </event>
                <event name="OnNewProcessingParameter">
                    <desc>Event to share processing parameters to the instances.</desc>
                    <param desc="Number of the instance to receive the parameter." multiplicity="1" name="objectNo" type="int"/>
                    <param desc="Name of the parameter." multiplicity="1" name="parameter" type="string"/>
                    <param desc="Value of the parameter." multiplicity="1" name="value" type="auto"/>
                    <param desc="If parameter is for specifici internal used object, its number." multiplicity="?" name="internalObjectNo" type="int"/>
                </event>
                <event name="OnNewSelectedInstance">
                    <desc>Notify if new instance is selected.</desc>
                    <param desc="Selected instance." multiplicity="1" name="selectedObject" type="int"/>
                </event>
                <event name="OnDataLoadedOnReboot">
                    <desc>Event to call if module tried to load parameters and should be ready.</desc>
                </event>
                <event name="OnNewParameterName">
                    <desc>Notify name of persistent data parameter.</desc>
                    <param desc="Parameter name." multiplicity="1" name="name" type="string"/>
                </event>
                <event name="OnUserLevelOperatorActive">
                    <desc>Status of Operator userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelMaintenanceActive">
                    <desc>Status of Maintenance userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelServiceActive">
                    <desc>Status of Service userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelAdminActive">
                    <desc>Status of Admin userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewValueUpdateNUM">
                    <desc>Example of dynamically created event to sync paramters between instance threads and Controller part of module. +
NUM will be replaced by the number of instance (e.g. "OnNewResult1"). +</desc>
                    <param desc="Instance new value is coming from." multiplicity="1" name="instance" type="int"/>
                    <param desc="Name of the paramter to update/sync." multiplicity="1" name="parameter" type="string"/>
                    <param desc="Value to update." multiplicity="1" name="value" type="auto"/>
                    <param desc="Optionally if internal parameter should be used for internal objects." multiplicity="?" name="selectedObject" type="int"/>
                </event>
                <event name="OnNewValueToForwardNUM">
                    <desc>Example of dynamically created event to forward data from instance thread to Controller part of module, e.g. to forward values to UI. +
NUM will be replaced by the number of instance (e.g. "OnNewResult1"). +</desc>
                    <param desc="Eventname to use to forward value." multiplicity="1" name="eventname" type="string"/>
                    <param desc="Value to forward." multiplicity="1" name="value" type="auto"/>
                </event>
                <event name="OnNewPort">
                    <desc>Event to provide port number.</desc>
                    <param desc="Port number value." multiplicity="1" name="Port" type="int"/>
                </event>
                <event name="OnNewInterface">
                    <desc>Event to provide the selected Interface for active server.</desc>
                    <param desc="The interface TCP/IP server listens to." multiplicity="1" name="Interface" type="string"/>
                </event>
                <event name="OnNewRxFraming">
                    <desc>Event to provide the selected Rx framing type.</desc>
                    <param desc="Rx framing type." multiplicity="1" name="newRxFraming" type="string"/>
                </event>
                <event name="OnNewTxFraming">
                    <desc>Event to provide the selected Tx framing type.</desc>
                    <param desc="Tx framing type." multiplicity="1" name="newTxFraming" type="string"/>
                </event>
                <event name="OnNewRxStart">
                    <desc>Event to provide the Rx Start hex symbol.</desc>
                    <param desc="Rx start symbol." multiplicity="?" name="newRxStart" type="string"/>
                </event>
                <event name="OnNewRxStop">
                    <desc>Event to provide the Rx stop hex symbol.</desc>
                    <param desc="Rx stop symbol." multiplicity="?" name="newRxStop" type="string"/>
                </event>
                <event name="OnNewTxStart">
                    <desc>Event to provide the Tx Start hex symbol.</desc>
                    <param desc="Tx start symbol." multiplicity="?" name="newTxStart" type="string"/>
                </event>
                <event name="OnNewTxStop">
                    <desc>Event to provide the Tx Stop hex symbol.</desc>
                    <param desc="Tx stop symbol." multiplicity="?" name="newTxStop" type="string"/>
                </event>
                <event name="OnNewMaxConnections">
                    <desc>Event to provide the max connections value.</desc>
                    <param desc="Max connections value." multiplicity="1" name="newMaxConnections" type="string"/>
                </event>
                <event name="OnNewTransmitTimeout">
                    <desc>Event to provide the transmittion timeout value.</desc>
                    <param desc="Transmittion timeout in ms." multiplicity="1" name="newTransmitTimeout" type="string"/>
                </event>
                <event name="OnNewACKTimeout">
                    <desc>Event to provide the current acknowledgement timeout value.</desc>
                    <param desc="ACK timeout." multiplicity="1" name="newTransmitAckTimeout" type="string"/>
                </event>
                <event name="OnNewTransmitBuffer">
                    <desc>Event to provide the transmittion buffer value.</desc>
                    <param desc="Transmittion buffer in bytes." multiplicity="1" name="newTransmitBuffer" type="string"/>
                </event>
                <event name="OnNewRxFramingBufferSize">
                    <desc>Event to provide the Rx buffer size.</desc>
                    <param desc="Rx buffer size in bytes." multiplicity="1" name="newRxFramingBufferSize" type="string"/>
                </event>
                <event name="OnNewTxFramingBufferSize">
                    <desc>Event to provide the Tx buffer size.</desc>
                    <param desc="Tx buffer size in bytes." multiplicity="1" name="newTxFramingBufferSize" type="string"/>
                </event>
                <event name="OnNewConnectedClientsNumber">
                    <desc>Event to provide the connected clients number.</desc>
                    <param desc="New number of connected clients." multiplicity="1" name="clientsNum" type="int"/>
                </event>
                <event name="OnNewInterfaceList">
                    <desc>Event to provide the list of available ethernet interfaces.</desc>
                    <param desc="List of interfaces in JSON format." multiplicity="1" name="interfaceList" type="string"/>
                </event>
                <event name="OnNewRxFramingList">
                    <desc>Event to provide the list of available Rx framing types.</desc>
                    <param desc="List of framings in JSON format." multiplicity="1" name="RxFramingList" type="string"/>
                </event>
                <event name="OnNewTxFramingList">
                    <desc>Event to provide the list of available Tx framing types.</desc>
                    <param desc="List of framings in JSON format." multiplicity="1" name="TxFramingList" type="string"/>
                </event>
                <event name="OnNewConnectedClientsTable">
                    <desc>Event to provide dynamic table content with connected clients.</desc>
                    <param desc="Connected clients table in JSON format." multiplicity="1" name="newData" type="string"/>
                </event>
                <event name="OnNewListenState">
                    <desc>Event to provide the active state of server.</desc>
                    <param desc="Active state to show in UI." multiplicity="1" name="newState" type="bool"/>
                </event>
                <event name="OnRxFramingDisabled">
                    <desc>Event to disable/enable editing Rx Framing field in UI.</desc>
                    <param desc="true if disabled" multiplicity="1" name="isDisabled" type="bool"/>
                </event>
                <event name="OnTxFramingDisabled">
                    <desc>Event to disable/enable editing Tx Framing field in UI.</desc>
                    <param desc="true if disabled" multiplicity="1" name="isDisabled" type="bool"/>
                </event>
                <event name="OnNewServerIP">
                    <desc>Event to provide the server IP address.</desc>
                    <param desc="Server IP address." multiplicity="1" name="newIPAddress" type="string"/>
                </event>
                <event name="OnNewSelectedReadMessage">
                    <trait>released</trait>
                    <desc>Event to provide the name of the selected read message.</desc>
                    <param desc="Name of the selected read message." multiplicity="1" name="readMessageName" type="string"/>
                </event>
                <event name="OnNewListReadMessages">
                    <trait>released</trait>
                    <desc>Event to provide the list of all created read messages.</desc>
                    <param desc="List of read messages in JSON format." multiplicity="1" name="jsonReadMessagesList" type="string"/>
                </event>
                <event name="OnNewUseReadMessageIPFilterState">
                    <trait>released</trait>
                    <desc>Event to provide status if message is expected from any client or filter is used.</desc>
                    <param desc="State." multiplicity="1" name="state" type="bool"/>
                </event>
                <event name="OnNewReadMessageEventName">
                    <trait>released</trait>
                    <desc>Event to provide the event name of the selected read message.</desc>
                    <param desc="Event name." multiplicity="1" name="eventName" type="string"/>
                </event>
                <event name="OnNewReadMessageFilterTableContent">
                    <trait>released</trait>
                    <desc>Event to provide IP filter table of the selected read message. </desc>
                    <param desc="Table content in JSON format." multiplicity="1" name="jsonTableContent" type="string"/>
                </event>
                <event name="OnNewSelectedTab">
                    <trait>released</trait>
                    <desc>Event to provide the current selected tab ID.</desc>
                    <param desc="Tab ID." multiplicity="1" name="newSelectedTab" type="int"/>
                </event>
                <event name="OnNewReadMessageSelectedStatus">
                    <trait>released</trait>
                    <desc>Event to provide status if any read message is selected.</desc>
                    <param desc="True if selected." multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewGenericReceivedDataEventName">
                    <trait>released</trait>
                    <desc>Event to provide the name of event notified when server receives any data from any client.</desc>
                    <param desc="Event name." multiplicity="1" name="eventName" type="string"/>
                </event>
                <event name="OnNewGenericSendDataFunctionName">
                    <trait>released</trait>
                    <desc>Event to provide the name of function to be called to send any data to all clients.</desc>
                    <param desc="Function name." multiplicity="1" name="functionName" type="string"/>
                </event>
                <event name="OnNewTestDataToSend">
                    <trait>released</trait>
                    <desc>Event to provide the data to be sent for testing purposes.</desc>
                    <param desc="Data to be sent." multiplicity="1" name="testDataToSend" type="string"/>
                </event>
                <event name="OnNewListWriteMessages">
                    <trait>released</trait>
                    <desc>Event to provide the list of all created write messages.</desc>
                    <param desc="List of write messages in JSON format." multiplicity="1" name="jsonWriteMessagesList" type="string"/>
                </event>
                <event name="OnNewSelectedWriteMessage">
                    <trait>released</trait>
                    <desc>Event to provide the name of the selected read message.</desc>
                    <param desc="Name of the selected write message." multiplicity="1" name="writeMessageName" type="string"/>
                </event>
                <event name="OnNewWriteMessageFunctionName">
                    <trait>released</trait>
                    <desc>Event to provide the function name of the selected write message.</desc>
                    <param desc="Event name." multiplicity="1" name="eventName" type="string"/>
                </event>
                <event name="OnNewUseWriteMessageIPFilterState">
                    <trait>released</trait>
                    <desc>Event to provide status message will be sent to each connected client or to filtered ones.</desc>
                    <param desc="State." multiplicity="1" name="state" type="bool"/>
                </event>
                <event name="OnNewWriteMessageFilterTableContent">
                    <trait>released</trait>
                    <desc>Event to provide IP filter table of the selected write message. </desc>
                    <param desc="Table content in JSON format." multiplicity="1" name="jsonTableContent" type="string"/>
                </event>
                <event name="OnNewTestWriteMessageDataToSend">
                    <trait>released</trait>
                    <desc>Event to provide the data to be sent for testing purposes as the selected write message.</desc>
                    <param desc="Data to be sent." multiplicity="1" name="testDataToSend" type="string"/>
                </event>
                <event name="OnNewWriteMessageSelectedStatus">
                    <trait>released</trait>
                    <desc>Event to provide the status if any write message is selected.</desc>
                    <param desc="True if selected." multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewLog">
                    <desc>Notfiy latest log.</desc>
                    <param desc="Log entries." multiplicity="1" name="log" type="string"/>
                </event>
                <event name="OnNewStatusAddIPViaList">
                    <desc>Notify status if IP for filter should be added via list selection in UI.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnReceivedDataNUM">
                    <desc>Example of dynamically created event to provide received data of instance. +
NUM will be replaced by the number of instance (e.g. "OnReceivedData1"). +
INFO: Other modules can check via "Script.isServedAsEvent" if event of sepecific instance exists.</desc>
                    <param desc="Received data." multiplicity="1" name="data" type="string"/>
                    <param desc="IP address of source." multiplicity="1" name="ipAddress" type="string"/>
                    <param desc="Queue size." multiplicity="1" name="queueSize" type="int"/>
                    <param desc="Needed time." multiplicity="1" name="time" type="int"/>
                    <param desc="Optional error message." multiplicity="?" name="errorMsg" type="string"/>
                </event>
                <event name="OnReceivedDataNUM_READMESSAGENAME">
                    <desc>Example of dynamically created event to provide received data of readMessage of instance. +
'NUM' and 'READMESSAGENAME' will be replaced by the number of instance and name of readMessage (e.g. "OnReceivedData1_message1"). +
INFO: Other modules can check via "Script.isServedAsEvent" if event of sepecific instance exists.</desc>
                    <param desc="Received data." multiplicity="1" name="data" type="string"/>
                    <param desc="IP address of source." multiplicity="1" name="ipAddress" type="string"/>
                    <param desc="Queue size." multiplicity="1" name="queueSize" type="int"/>
                    <param desc="Needed time." multiplicity="1" name="time" type="int"/>
                    <param desc="Optional error message." multiplicity="?" name="errorMsg" type="string"/>
                </event>
                <function name="setListenState">
                    <desc>Function to turn server on or off.</desc>
                    <param desc="New listen state, true if active." multiplicity="1" name="newState" type="bool"/>
                </function>
                <function name="setPort">
                    <desc>Function to set port, server must be restarted to apply the settings.</desc>
                    <param desc="New port to listen to" multiplicity="1" name="newPort" type="int"/>
                </function>
                <function name="setInterface">
                    <desc>Sets device's interface from UI, server must be rebooted to apply the settings</desc>
                    <param desc="New interface to listen to." multiplicity="1" name="newInterface" type="string"/>
                </function>
                <function name="setRxFraming">
                    <desc>Set Rx Framing type, server must be restarted to apply the settings.</desc>
                    <param desc="Framing type of recived data to be used by server. " multiplicity="1" name="newRxFraming" ref="CSK_MultiTCPIPServer.FramingType" type="enum"/>
                </function>
                <function name="setTxFraming">
                    <desc>Set Tx framing type, server must be restarted to apply the settings.</desc>
                    <param desc="Framing  of transmitted data to be used by server." multiplicity="1" name="newTxFraming" type="enum"/>
                </function>
                <function name="setRxStart">
                    <desc>Set RxStart frame from UI, server must be restarted to apply the settings.</desc>
                    <param desc="Hex symbol of a start frame of recived data to be used by server." multiplicity="1" name="newRxStart" type="string"/>
                </function>
                <function name="setRxStop">
                    <desc>Set RxStop frame from UI, server must be restarted to apply the settings.</desc>
                    <param desc="Hex symbol of a stop frame of recived data to be used by server." multiplicity="1" name="newRxStop" type="string"/>
                </function>
                <function name="setTxStart">
                    <desc>Set TxStart frame, server must be restarted to apply the settings.</desc>
                    <param desc="Hex symbol of a start frame of transmitted data to be used by server." multiplicity="1" name="newTxStart" type="string"/>
                </function>
                <function name="setTxStop">
                    <desc>Set TxStop frame, server must be restarted to apply the settings.</desc>
                    <param desc="Hex symbol of a stop frame of transmitted data to be used by server." multiplicity="1" name="newTxStop" type="string"/>
                </function>
                <function name="setMaxConnections">
                    <desc>Set limit of connections, server must be restarted to apply the settings.</desc>
                    <param desc="Maximum number of connected clients for server." multiplicity="1" name="newMaxConnections" type="int"/>
                </function>
                <function name="setTransmitionTimeout">
                    <desc>Set data transmition timeout, server must be restarted to apply the settings.</desc>
                    <param desc="Timeout for transmits, in milliseconds." multiplicity="1" name="newTransmitionTimeout" type="int"/>
                </function>
                <function name="setACKTimeout">
                    <desc>Sets from UI the maximum time interval, in milliseconds, that a transmitted packet may stay unacknowledged before the connection is terminated.</desc>
                    <param desc="Timeout for packet ACKs, in milliseconds." multiplicity="1" name="newACKTimeout" type="int"/>
                </function>
                <function name="setTransmitionBuffer">
                    <desc>Sets the size of the socket send buffer. Server must be restarted to apply the settings.</desc>
                    <param desc="Size of the buffer, in bytes" multiplicity="1" name="newTransmitionBuffer" type="int"/>
                </function>
                <function name="setRxBuffer">
                    <desc>Sets the Rx size of the internal framing parser buffer from UI. Server must be restarted to apply the settings.</desc>
                    <param desc="Framing buffer size for receiving data." multiplicity="1" name="newRxBuffer" type="int"/>
                </function>
                <function name="setTxBuffer">
                    <desc>Sets the Tx size of the internal framing parser buffer. Server must be restarted to apply the settings.</desc>
                    <param desc="Framing buffer size for transmitting." multiplicity="1" name="newTxBuffer" type="int"/>
                </function>
                <function name="selectConnectedClient">
                    <desc>Select row in the connected clients dynamic table. Used to copy the IP Address of the selected client into read/write message filter list.</desc>
                    <param desc="Selected row from the connected clients table in JSON format." multiplicity="1" name="selectedRow" type="string"/>
                </function>
                <function name="getInterfaceIP">
                    <desc>Get the IP address of the selected server.</desc>
                    <return desc="IP" multiplicity="1" name="selectedInterfaceIp" type="string"/>
                </function>
                <function name="setParameterName">
                    <desc>Function to set the name of the parameters if saved/loaded via the CSK_PersistentData module.</desc>
                    <param desc="Name of the parameter." multiplicity="1" name="name" type="string"/>
                </function>
                <function name="sendParameters">
                    <desc>Send parameters to CSK_PersistentData module if possible to save them.</desc>
                </function>
                <function name="loadParameters">
                    <desc>Load parameters for this module from the CSK_PersistentData module if possible and use them.</desc>
                </function>
                <function name="setLoadOnReboot">
                    <desc>Configure if this module should load its saved parameters at app/ device boot up.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="pageCalled">
                    <desc>Function to register "OnResume" of the module UI (only as helper function).</desc>
                    <return desc="Empty string (only needed to simplify binding)." multiplicity="1" name="empty" type="string"/>
                </function>
                <function name="setSelectedInstance">
                    <desc>Select one of the multiple instances.</desc>
                    <param desc="Instance to select." multiplicity="1" name="instance" type="int"/>
                </function>
                <function name="getInstancesAmount">
                    <desc>Get the amount of created instances of this module.</desc>
                    <return desc="Amount of created instances." multiplicity="1" name="amount" type="int"/>
                </function>
                <function name="addInstance">
                    <desc>Function to add an additional instance.</desc>
                </function>
                <function name="resetInstances">
                    <desc>Function to reset instances to one single instance. +
IMPORTANT: As instances start their own threads, the module needs to be restarted if new instances are needed... (see AppEngine docu for "Script.startScript").</desc>
                </function>
                <function name="createReadMessage">
                    <trait>released</trait>
                    <desc>Create a new read message with default name.</desc>
                </function>
                <function name="setReadMessageName">
                    <trait>released</trait>
                    <desc>Set a new name of the selected read message.</desc>
                    <param desc="New name of the message." multiplicity="1" name="newName" type="string"/>
                </function>
                <function name="setSelectedReadMessage">
                    <trait>released</trait>
                    <desc>Select read message to edit.</desc>
                    <param desc="Name of the read message." multiplicity="1" name="readMessageName" type="string"/>
                </function>
                <function name="deleteReadMessage">
                    <trait>released</trait>
                    <desc>Delete the selected read message.</desc>
                </function>
                <function name="setIPAddressToAddToReadMessage">
                    <trait>released</trait>
                    <desc>Set IP address to be added to list of clients from which Server will wait for a message.</desc>
                    <param desc="IP address." multiplicity="1" name="ipAddress" type="string"/>
                </function>
                <function name="deleteReadMessageFilterIPAddress">
                    <trait>released</trait>
                    <desc>Delete the selected IP address from the list of the selected read message.</desc>
                    <param desc="JSON content of the selected row of the dynamic with IP Address to delete." multiplicity="1" name="jsonRowToDelete" type="string"/>
                </function>
                <function name="setUseReadMessageIPFilter">
                    <trait>released</trait>
                    <desc>Set to to turn on/off filter of IP addresses of clients sending the selected message.</desc>
                    <param desc="Set to false if the message is expected from any connected client." multiplicity="1" name="newState" type="bool"/>
                </function>
                <function name="setSelectedTab">
                    <trait>released</trait>
                    <desc>Set selcetd settings tab in UI.</desc>
                    <param desc="Tab ID." multiplicity="1" name="newSelectedTab" type="int"/>
                </function>
                <function name="setTestDataToSend">
                    <trait>released</trait>
                    <desc>Set data to be sent to clients for testing purposes.</desc>
                    <param desc="Data to be sent." multiplicity="1" name="newTestDataToSend" type="string"/>
                </function>
                <function name="sendTestData">
                    <trait>released</trait>
                    <desc>Function to send the pre-defined test data (see setTestDataToSend).</desc>
                </function>
                <function name="getLatestGenericReceivedDataNUM">
                    <trait>released</trait>
                    <desc>Get information about the latest received data. +
NUM will be replaced by the number of instance (e.g. "getLatestGenericReceivedData1"). +</desc>
                    <return desc="IP address of the client." multiplicity="1" name="ipAddress" type="string"/>
                    <return desc="Latest received data." multiplicity="1" name="data" type="string"/>
                </function>
                <function name="setWriteMessageName">
                    <trait>released</trait>
                    <desc>Set a new name of the selected write message.</desc>
                    <param desc="New name of the message." multiplicity="1" name="newName" type="string"/>
                </function>
                <function name="setSelectedWriteMessage">
                    <trait>released</trait>
                    <desc>Select write message to edit.</desc>
                    <param desc="Name of the write message." multiplicity="1" name="writeMessageName" type="string"/>
                </function>
                <function name="createWriteMessage">
                    <trait>released</trait>
                    <desc>Create a new write message with default name.</desc>
                </function>
                <function name="deleteWriteMessage">
                    <trait>released</trait>
                    <desc>Delete the selected write message.</desc>
                </function>
                <function name="setUseWriteMessageIPFilter">
                    <trait>released</trait>
                    <desc>Set to to turn on/off filter of IP addresses clients to which the message will be sent.</desc>
                    <param desc="Set to false if message will be sent to all connected clients." multiplicity="1" name="newState" type="bool"/>
                </function>
                <function name="setIPAddressToAddToWriteMessage">
                    <trait>released</trait>
                    <desc>Set IP address to be added to list of clients to which the server send the message.</desc>
                    <param desc="IP address." multiplicity="1" name="ipAddress" type="string"/>
                </function>
                <function name="deleteWriteMessageFilterIPAddress">
                    <trait>released</trait>
                    <desc>Delete the selected IP address from the list of the selected read message.</desc>
                    <param desc="JSON content of the selected row of the dynamic with IP Address to delete." multiplicity="1" name="jsonRowToDelete" type="string"/>
                </function>
                <function name="sendTestWriteMessageData">
                    <trait>released</trait>
                    <desc>Function to send the pre-defined test data (see setTestWriteMessageDataToSend) as the selected write message.</desc>
                </function>
                <function name="setTestWriteMessageDataToSend">
                    <trait>released</trait>
                    <desc>Set data to be sent to clients filtered in the selected write message for testing purposes.</desc>
                    <param desc="Data to be sent." multiplicity="1" name="newTestDataToSend" type="string"/>
                </function>
                <function name="getConnectedClientsIPsNUM">
                    <trait>released</trait>
                    <desc>Function to get list of IP addresses of the connected clients. +
NUM will be replaced by the number of instance (e.g. "getConnectedClientsIPs1"). +</desc>
                    <return desc="Array with IP addresses of the connected clients." multiplicity="*" name="connectedClientsIPs" type="string"/>
                </function>
                <function name="getLatestReadMessageDataNUM">
                    <trait>released</trait>
                    <desc>Get information about the latest received data of the specified message. +
NUM will be replaced by the number of instance (e.g. "getLatestReadMessageData1"). +</desc>
                    <param desc="Name of the message." multiplicity="1" name="messageName" type="string"/>
                    <return desc="IP address of the client." multiplicity="1" name="ipAddress" type="string"/>
                    <return desc="Latest received data." multiplicity="1" name="data" type="string"/>
                </function>
                <function name="getLatestGenericSentDataNUM">
                    <trait>released</trait>
                    <desc>Get information about the latest sent data. +
NUM will be replaced by the number of instance (e.g. "getLatestGenericSentData1"). +</desc>
                    <return desc="IP address of the client." multiplicity="1" name="ipAddress" type="string"/>
                    <return desc="Latest received data." multiplicity="1" name="data" type="string"/>
                </function>
                <function name="getLatestWriteMessageDataNUM">
                    <trait>released</trait>
                    <desc>Get information about the latest sent data of the specified message. +
NUM will be replaced by the number of instance (e.g. "getLatestWriteMessageData1"). +</desc>
                    <param desc="Name of the message." multiplicity="1" name="messageName" type="string"/>
                    <return desc="Success of sending the data." multiplicity="1" name="success" type="bool"/>
                    <return desc="Latest received data." multiplicity="1" name="data" type="string"/>
                </function>
                <function name="setAddIPViaList">
                    <desc>Function to activate to select IP via UI list for filter.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="sendDataNUM">
                    <desc>Example of dynamically served function to send data on instance to clients. +
NUM will be replaced by the number of instance (e.g. "sendData1"). +
INFO: Other modules can check via "Script.isServedAsFunction" if function of sepecific instance exists. +
Needs then to be called via "Script.callFunction".</desc>
                    <param desc="Data to send." multiplicity="1" name="data" type="string"/>
                    <param desc="Optional list of IP addresses of the clients to send the data to. " multiplicity="*" name="ipList" type="string"/>
                    <return desc="Success of sending the data." multiplicity="1" name="success" type="bool"/>
                    <return desc="Details if sending failed." multiplicity="?" name="details" type="string"/>
                </function>
                <function name="sendDataNUM_WRITEMESSAGENAME">
                    <desc>Example of dynamically served function to send data on instance via writeMessage. +
'NUM' and 'WRITEMESSAGENAME' will be replaced by the number of instance and name of writeMessage (e.g. "sendData1_message1"). +
INFO: Other modules can check via "Script.isServedAsFunction" if function of sepecific instance exists. +
Needs then to be called via "Script.callFunction".</desc>
                    <param desc="Data to write." multiplicity="1" name="data" type="auto"/>
                    <return desc="Success of sending the data." multiplicity="1" name="success" type="bool"/>
                    <return desc="Details if sending failed." multiplicity="1" name="queueSize" type="string"/>
                    <return desc="Needed time." multiplicity="1" name="neededTime" type="int"/>
                    <return desc="Optional error message." multiplicity="?" name="error" type="string"/>
                </function>
            </serves>
        </crown>
        <meta key="author">SICK AG</meta>
        <meta key="version">1.0.0</meta>
        <meta key="priority">low</meta>
        <meta key="copy-protected">false</meta>
        <meta key="read-protected">false</meta>
        <meta key="crown2-flow-engine">false</meta>
        <meta key="LuaLoadAllEngineAPI">true</meta>
        <entry default="CSK_Module_MultiTCPIPServer.lua" path="scripts"/>
    </application>
</manifest>
